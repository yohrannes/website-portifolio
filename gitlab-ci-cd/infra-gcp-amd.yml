create-gcp-instance:
  stage: create-infra
  only:
    - infra-gcp-amd
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    #DOCKER_TLS_CERT_DIR: "/certs"
    #DOCKER_HOST: "tcp://docker:2375"
  
  before_script:

    #Autencicate with OCI 
    - mkdir -p $HOME/.oci
    - echo "$OCI_CONFIG_BASE64" | base64 -d > $HOME/.oci/config
    - echo "$OCI_PRIVATE_KEY_BASE64" | base64 -d > $HOME/.oci/oci_api_key.pem
    - chmod 700 $HOME/.oci
    - chmod 600 $HOME/.oci/oci_api_key.pem
    - chmod 600 $HOME/.oci/config
    - export TF_VAR_compartment_id=$OCI_COMPARTMENT_OCID
    - export TF_VAR_region=$OCI_REGION

    #Autencicate with AWS
    - mkdir -p $HOME/.aws
    - echo "$AWS_CONFIG_BASE64" | base64 -d > $HOME/.aws/config
    - echo "$AWS_CREDENTIALS_BASE64" | base64 -d > $HOME/.aws/credentials
    - chmod 700 $HOME/.aws
    - chmod 600 $HOME/.aws/credentials
    - chmod 600 $HOME/.aws/config

    #Autencicate with GCP
    - mkdir -p $HOME/.gcp
    - echo "$GOOGLE_APPLICATION_CREDENTIALS" | base64 -d > $HOME/.gcp/credentials.json
    - chmod 775 $HOME/.gcp
    - chmod 664 $HOME/.gcp/credentials.json

    # Prepare SSH files to enable ssh conection with instance
    - sudo apt-get install -y openssh-client openssh-server curl
    - mkdir -p $HOME/.ssh
    - (echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > $HOME/.ssh/id_rsa 2>/dev/null)
    - (echo "$SSH_PUBLIC_KEY_BASE64" | base64 -d > $HOME/.ssh/id_rsa.pub 2>/dev/null)
    - chmod 644 $HOME/.ssh/id_rsa.pub

    # Check old terraform containers
    - |
      if [ "$(sudo docker ps -a -q -f name=^terraform-container$)" ]; then
        echo "Old terraform container found removing..."
        sudo docker stop terraform-container
        sudo docker rm terraform-container
      fi

    # Build terraform container to arm64/v8
    - |
      sudo docker buildx build \
      -f ./build-tf-arm64-v8/Dockerfile \
      --platform linux/arm64 \
      -t yohrannes/terraform:latest \
      --build-arg PRODUCT=terraform \
      --build-arg VERSION=1.7.2 .

    # Run terraform-container 
    - |
      sudo docker run -d --name terraform-container yohrannes/terraform:latest sleep 3600
    - sudo docker cp $CI_PROJECT_DIR/terraform terraform-container:/app > /dev/null 2>&1
    - sudo docker cp $HOME/.oci terraform-container:/root/.oci > /dev/null 2>&1
    - sudo docker cp $HOME/.aws terraform-container:/root/.aws > /dev/null 2>&1
    - sudo docker cp $HOME/.gcp terraform-container:/root/.gcp > /dev/null 2>&1
    - sudo docker exec -w /app terraform-container mkdir /root/.ssh
    - sudo docker cp $HOME/.ssh/id_rsa.pub terraform-container:/root/.ssh/id_rsa.pub > /dev/null 2>&1

  script:
    - |
      sudo docker exec -w /app terraform-container sh -c "
        terraform init -reconfigure
        terraform workspace select web_port_dev
        terraform plan -detailed-exitcode -target=module.instance_gcp_amd -out=plan | grep "Plan:"
        terraform apply plan | grep -o -E 'oci[^.]*.'
      "

    #EXPORT INSTANCE IP
    - INSTANCE_PUBLIC_IP=$(sudo docker exec -w /app terraform-container terraform output -raw instance_public_ip)
    - |
      curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        --request PUT \
        --form "value=$INSTANCE_PUBLIC_IP" \
        "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/variables/TF_GCP_INSTANCE_PUBLIC_IP" \
        > /dev/null 2>&1
    - sudo docker stop terraform-container
    - sudo docker rm terraform-container
        