# task RECONFIGURE FAIL2BAN TO DOCKER IMAGE https://hub.docker.com/r/linuxserver/fail2ban
services:
  fail2ban:
    build:
      context: ./fail2ban
      dockerfile: Dockerfile
    container_name: fail2ban
    cap_add:
      - NET_ADMIN
      - NET_RAW
    network_mode: host
    #networks:
    #  - portifolio-network
    volumes:
      - ./fail2ban/config:/config
      - /var/log/auth.log:/var/log/auth.log
      - /var/log/nginx:/var/log/nginx
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - FAILREGEX_DECODED=${FAILREGEX_DECODED}
      - TZ=America/Sao_Paulo
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 80M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/vts.conf:/etc/nginx/conf.d/vts.conf
      - ./nginx/conf.d/yohrannes.com.conf:/etc/nginx/conf.d/yohrannes.com.conf
      - ./nginx/conf.d/grafana.yohrannes.com.conf:/etc/nginx/conf.d/grafana.yohrannes.com.conf
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - webport
    networks:
      - portifolio-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 100M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  nginx-exporter:
    image: sophos/nginx-vts-exporter
    container_name: nginx-exporter
    environment:
      - NGINX_STATUS=http://nginx:9001/status/format/json
    depends_on:
      - nginx
    networks:
      - portifolio-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 40M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  webport:
    build:
      context: ./webport
      dockerfile: Dockerfile
    container_name: webport
    networks:
      - portifolio-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 175M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - portifolio-network
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 150M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  prometheus:
    image: prom/prometheus:v3.3.1
    container_name: prometheus
    networks:
      - portifolio-network
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d"
    mem_limit: 120m
    cpus: '0.2'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.0
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/machine-id:/etc/machine-id:ro
      - /dev/kmsg:/dev/kmsg:ro
    security_opt:
      - apparmor=unconfined
    restart: always
    networks:
      - portifolio-network
    mem_limit: 150M
    cpus: '0.4'

networks:
  portifolio-network:
    driver: bridge

volumes:
  grafana-data:
  prometheus-data:
