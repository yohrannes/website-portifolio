# First runner provision, execute this pipeline locally using gl runner type docker

create-oci-oke-cluster:
  stage: create-infra
  image: docker:27.3.1
  services:
    - docker:27.3.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    AWS_DEFAULT_REGION: "us-east-1" #Check if that's really necessary
  before_script:
    #Autencicate with OCI
    - mkdir -p /root/.oci
    - echo "$OCI_CONFIG_BASE64" | base64 -d > /root/.oci/config
    - echo "$OCI_PRIVATE_KEY_BASE64" | base64 -d > /root/.oci/oci_api_key.pem
    - chmod 700 /root/.oci
    - chmod 600 /root/.oci/oci_api_key.pem
    - chmod 600 /root/.oci/config
    - export TF_VAR_compartment_id=$OCI_COMPARTMENT_OCID
    - export TF_VAR_region=$OCI_REGION

    #Autencicate with AWS
    - mkdir -p /root/.aws
    - echo "$AWS_CONFIG_BASE64" | base64 -d > /root/.aws/config
    - echo "$AWS_CREDENTIALS_BASE64" | base64 -d > /root/.aws/credentials
    - chmod 700 /root/.aws
    - chmod 600 /root/.aws/credentials
    - chmod 600 /root/.aws/config

    # Prepare SSH files to enable ssh conection with instance
    - cat /etc/*release*
    - apk update
    - apk upgrade
    - apk add --no-cache openssh curl
    - mkdir -p ~/.ssh
    - (echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa 2>/dev/null)
    - (echo "$SSH_PUBLIC_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa.pub 2>/dev/null)
    - chmod 644 ~/.ssh/id_rsa.pub

    # Run terraform-container
    - |
      docker run -d --name terraform-container \
      --entrypoint "" hashicorp/terraform:latest sleep 3600
    - docker cp $CI_PROJECT_DIR/terraform/prod terraform-container:/app > /dev/null 2>&1
    - ls -lahtr $CI_PROJECT_DIR/terraform/prod
    - echo $CI_PROJECT_DIR/terraform/prod
    - docker cp /root/.oci terraform-container:/root/.oci > /dev/null 2>&1
    - docker cp /root/.aws terraform-container:/root/.aws > /dev/null 2>&1
    - docker exec -w /app terraform-container mkdir /root/.ssh
    - docker cp /root/.ssh/id_rsa.pub terraform-container:/root/.ssh/id_rsa.pub > /dev/null 2>&1
  script:
    - |
     docker exec -w /app terraform-container sh -c "
        terraform init -reconfigure
        terraform workspace select oci_oke_web_port_prod
        terraform plan -detailed-exitcode -target=module.oci_oke_cluster_arm -out=plan | grep "Plan:"
        terraform apply plan | grep "Apply complete!"
        apk add curl jq;curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml"
        sleep 180
        yes | oci lb load-balancer update-load-balancer-shape --load-balancer-id $(echo $(oci lb load-balancer list --compartment-id $(echo $(terraform output compartment_id)) | jq '.data[0].id' | sed 's/"//g')) --shape-name flexible --shape-details '{"maximum-bandwidth-in-mbps": 10,"minimum-bandwidth-in-mbps": 10}'
      "
