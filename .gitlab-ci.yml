---
include:
  - local: 'pipelines/gitlab-ci-cd/1-pipelocal-infra-runner-oci-arm.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-runner-oci-arm"


  - local: 'pipelines/gitlab-ci-cd/2-infra-runner-gcp-amd.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-runner-gcp-amd"


  - local: 'pipelines/gitlab-ci-cd/3-infra-webapp-oci-amd.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-webapp-oci-amd"


  - local: 'pipelines/gitlab-ci-cd/4-infra-oci-oke-arm.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infr-cluster-oci-arm"


  - local: 'pipelines/gitlab-ci-cd/runner-controler.yml'
    rules:
      - if: $CI_COMMIT_BRANCH != "infra-runner-oci-arm"

  - local: 'pipelines/gitlab-ci-cd/develop.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "develop"

  - local: 'pipelines/gitlab-ci-cd/dev-dk-img.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "dev-dk-img"


variables:
  IMAGE_NAME: yohrannes/website-portifolio
  NGINX_IMAGE_NAME: yohrannes/nginx
  IMAGE_TAG: latest


stages:
  - prepare

  - create-infra
  - test-infra
  - deploy-infra
  - build
  - test
  - deploy-image
  - deploy

  - clean-runner

deploy-dkcmpose:
  stage: deploy 
  needs:
    - deploy-dk-hub
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  before_script:
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$IP_OCI_AMD_WEBAPP "
        mkdir -p repos-git
        cd repos-git
        git clone https://gitlab.com/yohrannes/website-portifolio.git
        cd website-portifolio
        git checkout main
        git pull origin main
        sudo docker system prune -a -f
        sudo docker build -qf ./build-app/Dockerfile -t yohrannes/website-portifolio:latest .
        sudo docker build -qf ./build-app/Dockerfile-nginx -t yohrannes/nginx:latest .
        cd docker-compose
        sudo docker compose down
        sudo docker pull yohrannes/website-portifolio:latest
        sudo docker pull yohrannes/nginx:latest
      "
  script:
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$IP_OCI_AMD_WEBAPP "
        sudo docker compose up -d
      "
#        sudo docker build -qf ./build-app/Dockerfile --network host -t yohrannes/website-portifolio:latest .
