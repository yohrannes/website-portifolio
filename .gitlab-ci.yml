---
variables:
  TF_CLOUD_ORG: "org-website-portifolio"
  TF_WORKSPACE: "web_port_dev"
  TF_CLOUD_API: "https://app.terraform.io/api/v2"
  MAX_RETRIES: 9
  RETRY_DELAY: 10
  PLAN_TIMEOUT: 1800
  APPLY_TIMEOUT: 3600
  # Fine-tuned variables for apply trigger retries
  APPLY_TRIGGER_MAX_ATTEMPTS: 90
  APPLY_TRIGGER_RETRY_DELAY: 5
  TF_ROOT: ${CI_PROJECT_DIR}/iac/terraform/prod
  TF_CONFIG_FILE: "terraform-config.tar.gz"
  
include:
  - local: 'pipelines/gitlab-ci-cd/1-pipelocal-infra-runner-oci-arm.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-runner-oci-arm"


  - local: 'pipelines/gitlab-ci-cd/2-infra-runner-gcp-amd.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-runner-gcp-amd"


  - local: 'pipelines/gitlab-ci-cd/3-infra-webapp-oci-amd.yml'
    rules:
     - if: $CI_COMMIT_BRANCH == "infra-webapp-oci-amd"


#  - local: 'pipelines/gitlab-ci-cd/4-infra-oci-oke-arm.yml'
#    rules:
#      - if: $CI_COMMIT_BRANCH == "infr-cluster-oci-arm"


  - local: 'pipelines/gitlab-ci-cd/runner-controler.yml'
    rules:
      - if: $CI_COMMIT_BRANCH != "infra-runner-oci-arm"
      - if: $CI_COMMIT_BRANCH != "infr-cluster-oci-arm"


  - local: 'pipelines/gitlab-ci-cd/develop.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "develop"


  - local: 'pipelines/gitlab-ci-cd/dev-dk-img.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "dev-dk-img"


stages:


## Runner Preparation Steps
  - runner-prepare

## Packer (HCP Cloud) Steps
#  - coming-soon

## Terraform (HCP Cloud) Steps
  - tf-up-conf-init-run
  - tf-plan-apply

## Development pipeline Steps, to be used for Devs (main, develop).
  - check
  - build
  - test
  - deploy-image
  - deploy

deploy-dkcmpose:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$IP_OCI_AMD_WEBAPP "

        mkdir -p repos-git
        cd repos-git
        git clone https://gitlab.com/yohrannes/website-portifolio.git
        cd website-portifolio
        git checkout main
        git pull origin main
        cd docker-compose
        sudo docker compose down
        sudo docker system prune -a -f

      "
  script:
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$IP_OCI_AMD_WEBAPP "
        sudo docker compose -f repos-git/website-portifolio/docker-compose/docker-compose.yml up -d
      "
