include:
  - local: 'pipelines/gitlab-ci-cd/1-pipelocal-infra-runner-oci-arm.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-runner-oci-arm"


  - local: 'pipelines/gitlab-ci-cd/2-infra-runner-gcp-amd.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-runner-gcp-amd"


  - local: 'pipelines/gitlab-ci-cd/3-infra-webapp-oci-amd.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infra-webapp-oci-amd"


  - local: 'pipelines/gitlab-ci-cd/4-infra-oci-oke-arm.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "infr-cluster-oci-arm"


  - local: 'pipelines/gitlab-ci-cd/runner-controler.yml'


  - local: 'pipelines/gitlab-ci-cd/develop.yml'
    rules:
      - if: $CI_COMMIT_BRANCH == "develop"


variables:
  IMAGE_NAME: yohrannes/website-portifolio
  IMAGE_TAG: latest


stages:
  - prepare

  - create-infra
  - test-infra
  - deploy-infra

  - build
  - test
  - deploy-image
  - deploy


deploy-dk-hub:
  stage: deploy-image
  rules:
      - if: $CI_COMMIT_BRANCH == "main"
  needs:
    - localrepo-img-sec-trivy
  tags: [ "oci-runner-arm" ]
  before_script:
    - echo "$DOCKER_REG_PASSWORD" | docker login -u yohrannes --password-stdin
  script:
    - mkdir -p repos-gitlab
    - cd repos-gitlab
    - git clone https://gitlab.com/yohrannes/website-portifolio.git
    - cd website-portifolio
    - git checkout develop

    - OLD_TAG=v$(./usefull-scripts/old-dk-img-version.sh)
    - docker pull -q $IMAGE_NAME:$OLD_TAG

    - NEW_TAG=v$(./usefull-scripts/nx-dk-img-version.sh)
#    - docker build -qf ./build-app/Dockerfile -t $IMAGE_NAME:$IMAGE_TAG .
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name multiarchbuilder
    - DIGEST_AMD64=$(docker buildx build --platform linux/amd64 -t $IMAGE_NAME:$NEW_TAG-amd64 --push . | grep -oP '(?<=docker.io/)[^@]+@\K[^ ]+')
    - DIGEST_ARM64=$(docker buildx build --platform linux/arm64 -t $IMAGE_NAME:$NEW_TAG-arm64 --push . | grep -oP '(?<=docker.io/)[^@]+@\K[^ ]+')
#    - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:$NEW_TAG

    - |
      docker manifest create $IMAGE_NAME:$NEW_TAG \
          --amend $IMAGE_NAME@$DIGEST_AMD64 \
          --amend $IMAGE_NAME@$DIGEST_ARM64

    - docker manifest push $IMAGE_NAME:$NEW_TAG

    - echo "image-changed"
    - echo "Old version $OLD_TAG changed to the new version $NEW_TAG"
#    - docker push -q $IMAGE_NAME:$NEW_TAG
#    - docker push -q $IMAGE_NAME:latest

# Assign image with cosign job
#  cosign sign -key ../../cosign-keys/cosign.key yohrannes/website-portifolio

deploy-dkcmpose:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$TF_INSTANCE_PUBLIC_IP "
        mkdir -p repos-git
        cd repos-git
        git clone https://gitlab.com/yohrannes/website-portifolio.git
        cd website-portifolio
        git checkout main
        sudo docker build -qf ./build-app/Dockerfile --network host -t yohrannes/website-portifolio:latest .
        cd docker-compose
        sudo docker compose up -d
      "