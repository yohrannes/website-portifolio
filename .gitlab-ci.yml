include:
  - local: 'gitlab-ci-cd/infra-amd.yml'
  - local: 'gitlab-ci-cd/infra-gcp-amd.yml'
  - local: 'gitlab-ci-cd/infra-runner.yml'
#  - local: 'gitlab-ci-cd/infra-k8s.yml'

variables:
  IMAGE_NAME: yohrannes/website-portifolio
  IMAGE_TAG: latest

stages:
  - create-infra
  - test-infra
  - deploy-infra

  - test
  - build
  - deploy-image

check-image-security:
  stage: test
  only:
   - develop
  image: docker:27.3.1
  services:
   - docker:27.3.1-dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$RUNNER_INSTANCE_PUBLIC_IP "
        sudo apt-get install wget gnupg -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo 'deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main' | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy -y
        trivy_output=\$(sudo trivy image --pkg-types os --cache-dir . yohrannes/website-portifolio --format json)
        critical_vulnerabilities_count=\$(echo \"\$trivy_output\" | grep \"CRITICAL\" | wc -l)
        high_vulnerabilities_count=\$(echo \"\$trivy_output\" | grep \"HIGH\" | wc -l)
        medium_vulnerabilities_count=\$(echo \"\$trivy_output\" | grep \"MEDIUM\" | wc -l)
        low_vulnerabilities_count=\$(echo \"\$trivy_output\" | grep \"LOW\" | wc -l )
        unknown_vulnerabilities_count=\$(echo \"\$trivy_output\" | grep \"UNKNOWN\" | wc -l)
        if [ \$critical_vulnerabilities_count -eq 0 ] && [ \$high_vulnerabilities_count -eq 0 ] && [ \$medium_vulnerabilities_count -eq 0 ] && [ \$low_vulnerabilities_count -eq 0 ] && [ \$unknown_vulnerabilities_count -eq 0 ]; then
          echo 'No vulnerabilities found.'
          exit 0
        else
          echo \"Found \$critical_vulnerabilities_count CRITICAL vulnerabilities.\"
          echo \"Found \$high_vulnerabilities_count HIGH vulnerabilities.\"
          echo \"Found \$medium_vulnerabilities_count MEDIUM vulnerabilities.\"
          echo \"Found \$low_vulnerabilities_count LOW vulnerabilities.\"
          echo \"Found \$unknown_vulnerabilities_count UNKNOWN vulnerabilities.\"
          exit 1
        fi
      "

build-image:
  stage: build
  only:
   - develop
  needs:
   - check-image-security
  image: docker:27.3.1
  services:
   - docker:27.3.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$DOCKER_REG_PASSWORD" | docker login -u yohrannes --password-stdin
  script:
    - |
      mkdir repos-gitlab
      cd repos-gitlab
      git clone https://gitlab.com/yohrannes/website-portifolio.git
      cd website-portifolio
      docker build -f ./build-app/Dockerfile --network host -t $IMAGE_NAME:$IMAGE_TAG .

deploy-image:
  stage: deploy-image
  only:
   - develop
  needs:
    - build-image
  image: docker:27.3.1
  services:
   - docker:27.3.1-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$DOCKER_REG_PASSWORD" | docker login -u yohrannes --password-stdin
  script:
    - |
      mkdir repos-gitlab
      cd repos-gitlab
      git clone https://gitlab.com/yohrannes/website-portifolio.git
      cd website-portifolio
      docker build -f ./build-app/Dockerfile --network host -t $IMAGE_NAME:$IMAGE_TAG .
      git checkout develop
      cd usefull-scripts
      apk add --no-cache jq curl
      NEW_TAG=$(sh nx-dk-img-version.sh)
      docker tag $IMAGE_NAME:latest $IMAGE_NAME:$NEW_TAG
      echo $NEW_TAG test